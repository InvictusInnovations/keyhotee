{
  "category": "Network Methods",
  "methods" :
    [
      {
        "method_name": "network_add_node",
        "description": "Attempts add or remove <node> from the peer list or try a connection to <node> once",
        "return_type": "void",
        "parameters" : 
          [
            { 
              "name" : "node", 
              "type" : "ip_endpoint", 
              "description" : "The node (see network_get_peer_info for nodes)",
              "example" : "192.168.1.5:5678"
            },
            { 
              "name" : "command", 
              "type" : "std::string", 
              "description" : "'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once",
              "example" : "add"
            }
          ],
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_get_connection_count",
        "description": "Returns the number of fully-established connections to other nodes",
        "return_type": "uint32_t",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_get_peer_info",
        "description": "Returns data about each connected node",
        "return_type": "json_object_array",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_broadcast_transaction",
        "description": "Broadcast a previously-created signed transaction to the network",
        "return_type": "transaction_id",
        "parameters" : 
          [
            { 
              "name" : "transaction_to_broadcast", 
              "type" : "signed_transaction", 
              "description" : "The transaction to broadcast to the network"
            }
          ],
        "prerequisites" : ["json_authenticated", "connected_to_network"]
      },
      {
        "method_name": "network_set_advanced_node_parameters",
        "description": "Sets advanced node parameters, used for setting up automated tests",
        "return_type": "void",
        "parameters" : 
          [
            { 
              "name" : "params", 
              "type" : "json_object", 
              "description" : "A JSON object containing the name/value pairs for the parameters to set"
            }
          ],
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_get_advanced_node_parameters",
        "description": "Sets advanced node parameters, used for setting up automated tests",
        "return_type": "json_object",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_get_transaction_propagation_data",
        "description": "Returns the time the transaction was first seen by this client",
        "return_type": "message_propagation_data",
        "parameters" : 
          [
            { 
              "name" : "transaction_id", 
              "type" : "transaction_id", 
              "description" : "the id of the transaction"
            }
          ],
        "detailed_description" : "This interrogates the p2p node's message cache to find out when it first saw this transaction. The data in the message cache is only kept for a few blocks, so you can only use this to ask about recent transactions. This is intended to be used to track message propagation delays in our test network.",
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_get_block_propagation_data",
        "description": "Returns the time the block was first seen by this client",
        "return_type": "message_propagation_data",
        "parameters" : 
          [
            { 
              "name" : "block_hash", 
              "type" : "block_id_type", 
              "description" : "the id of the block"
            }
          ],
        "detailed_description" : "This interrogates the p2p node's message cache to find out when it first saw this block. The data in the message cache is only kept for a few blocks, so you can only use this to ask about recent transactions. This is intended to be used to track message propagation delays in our test network.",
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_set_allowed_peers",
        "description": "Sets the list of peers this node is allowed to connect to",
        "return_type": "void",
        "parameters" : 
          [
            { 
              "name" : "allowed_peers", 
              "type" : "node_id_list", 
              "description" : "the list of allowable peers"
            }
          ],
        "prerequisites" : ["json_authenticated"],
        "detailed_description" : "This function sets the list of peers we're allowed to connect to. It is used during testing to force network splits or other weird topologies."
      },
      {
        "method_name": "network_get_info",
        "description": "Returns assorted information about the network settings and connections",
        "return_type": "json_object",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["json_authenticated"]
      },
      {
        "method_name": "network_list_potential_peers",
        "description": "Returns list of potential peers",
        "return_type": "potential_peer_record_array",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["json_authenticated"]
      }
    ]
}
