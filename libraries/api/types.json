{
  "type_map":
    [
      {
        "type_name" : "block_id_type",
        "cpp_return_type" : "bts::blockchain::block_id_type",
        "cpp_include_file" : "bts/blockchain/types.hpp"
      },
      {
        "type_name" : "blockchain_security_state",
        "cpp_return_type" : "bts::blockchain::blockchain_security_state",
        "cpp_include_file" : "bts/blockchain/types.hpp"
      },
      {
        "type_name" : "account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "Bob"
      },
      {
        "type_name" : "new_account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "Carol"
      },
      {
         "type_name" : "wallet_balance_record",
         "cpp_return_type" : "bts::wallet::wallet_balance_record"
      },
      {
         "type_name" : "wallet_balance_record_array",
         "container_type" : "array",
         "contained_type" : "wallet_balance_record"
      },
      {
        "type_name" : "account_record",
        "cpp_return_type" : "bts::blockchain::account_record",
        "cpp_include_file" : "bts/blockchain/types.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "account_record_array",
        "container_type" : "array",
        "contained_type" : "account_record",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "proposal_record",
        "cpp_return_type" : "bts::blockchain::proposal_record",
        "cpp_include_file" : "bts/blockchain/types.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "proposal_array",
        "container_type" : "array",
        "contained_type" : "proposal_record",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "proposal_vote",
        "cpp_return_type" : "bts::blockchain::proposal_vote",
        "cpp_include_file" : "bts/blockchain/types.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "vote_type",
        "cpp_return_type" : "bts::blockchain::proposal_vote::vote_type",
        "default_example" : "yes"
      },
      {
        "type_name" : "proposal_vote_array",
        "container_type" : "array",
        "contained_type" : "proposal_vote",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "optional_account_record",
        "cpp_return_type" : "fc::optional<bts::blockchain::account_record>",
        "cpp_include_file" : "bts/blockchain/types.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "signed_transactions",
        "cpp_return_type" : "bts::blockchain::signed_transactions",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "string",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "wallet_transfer"
      },
      {
        "type_name" : "method_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "wallet_transfer"
      },
      {
        "type_name" : "ip_endpoint",
        "cpp_return_type" : "fc::ip::endpoint",
        "cpp_include_file" : "fc/network/ip.hpp",
        "to_variant_function" : "bts::api::fc_ip_endpoint_to_variant",
        "from_variant_function" : "bts::api::variant_to_fc_ip_endpoint",
        "default_example" : "192.168.1.5:5678"
      },
      {
        "type_name" : "transaction_id",
        "cpp_return_type" : "bts::blockchain::transaction_id_type",
        "cpp_include_file" : "bts/blockchain/types.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "message_propagation_data",
       "cpp_return_type" : "bts::net::message_propagation_data",
        "cpp_include_file" : "bts/net/node.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "node_id",
        "cpp_return_type" : "bts::net::node_id_t",
        "cpp_include_file" : "bts/net/node.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "node_id_list",
        "container_type" : "array",
        "contained_type" : "node_id",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "new_passphrase",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "my_password",
        "obscure_in_log_files": true
      },
      {
        "type_name" : "passphrase",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "my_password",
        "obscure_in_log_files": true
      },
      {
        "type_name" : "wallet_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "alice"
      },
      {
        "type_name" : "variant",
        "cpp_return_type" : "fc::variant"
      },
      {
        "type_name" : "wallet_name_array",
        "container_type" : "array",
        "contained_type" : "wallet_name"
      },
      {
        "type_name" : "transaction_record",
        "cpp_return_type" : "bts::wallet::wallet_transaction_record",
        "cpp_include_file" : "bts/wallet/wallet_records.hpp"
      },
      {
        "type_name" : "transaction_record_array",
        "container_type" : "array",
        "contained_type" : "transaction_record"
      },
      {
        "type_name" : "optional_wallet_name",
        "cpp_return_type" : "fc::optional<std::string>",
        "cpp_include_file" : "fc/optional.hpp",
        "default_example" : "alice"
      },
      {
        "type_name" : "time_interval_in_seconds",
        "cpp_return_type" : "fc::microseconds",
        "cpp_include_file" : "fc/time.hpp",
        "to_variant_function" : "bts::api::time_interval_in_seconds_to_variant",
        "from_variant_function" : "bts::api::variant_to_time_interval_in_seconds",
        "default_example" : 300
      },
      {
        "type_name" : "wif_private_key",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "bts/blockchain/types.hpp",
        "default_example" : "5KV5f8Eohi7WmuxWnP4uJzh7oX9zDEYpTbHBx5jFokSEZoUWpbB",
        "obscure_in_log_files": true
      },
      {
        "type_name" : "public_key",
        "cpp_return_type" : "bts::blockchain::public_key_type",
        "cpp_include_file" : "bts/blockchain/types.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "public_key_summary",
        "cpp_return_type" : "bts::wallet::public_key_summary",
        "cpp_include_file" : "bts/wallet/pretty.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "public_key_summary_array",
        "container_type" : "array",
        "contained_type" : "public_key_summary",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "blockchain_transaction_record",
        "cpp_return_type" : "bts::blockchain::transaction_record",
        "cpp_include_file" : "bts/blockchain/block_record.hpp",
        "default_example" : "TODO"        
      },
      {
        "type_name" : "blockchain_transaction_record_array",
        "container_type" : "array",
        "contained_type" : "blockchain_transaction_record"
      },
      {
        "type_name" : "signed_transaction",
        "cpp_return_type" : "bts::blockchain::signed_transaction",
        "cpp_include_file" : "bts/blockchain/transaction.hpp",
        "default_example" : "TODO"        
      },
      {
        "type_name" : "signed_transaction_array",
        "container_type" : "array",
        "contained_type" : "signed_transaction",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "optional_blockchain_transaction_record",
        "cpp_return_type" : "fc::optional<bts::blockchain::transaction_record>",
        "cpp_include_file" : "fc/optional.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "optional_signed_transaction",
        "cpp_return_type" : "fc::optional<bts::blockchain::signed_transaction>",
        "cpp_include_file" : "fc/optional.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "share_type",
        "cpp_return_type" : "bts::blockchain::share_type",
        "default_example" : "TODO"        
      },
      {
        "type_name" : "asset",
        "cpp_return_type" : "std::pair<bts::blockchain::share_type,std::string>",
        "default_example" : "TODO"        
      },
      {
        "type_name" : "asset_array",
        "container_type" : "array",
        "contained_type" : "asset",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "pretty_transaction",
        "cpp_return_type" : "bts::wallet::pretty_transaction",
        "cpp_include_file" : "bts/wallet/pretty.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "pretty_transactions",
        "cpp_return_type" : "std::vector<bts::wallet::pretty_transaction>",
        "cpp_include_file" : "bts/wallet/pretty.hpp",
        "default_example" : "TODO"
      },
      {
         "type_name" : "map< account_name, map< asset_symbol, share_type> >",
         "cpp_return_type" : "std::unordered_map< std::string, std::map<std::string, bts::blockchain::share_type> >"
      },
      {
         "type_name" : "market_order",
         "cpp_return_type" : "bts::blockchain::market_order"
      },
      {
         "type_name" : "market_order_array",
         "container_type" : "array",
         "contained_type" : "market_order"
      },
      {
        "type_name" : "amount",
        "cpp_parameter_type" : "int64_t",
        "cpp_return_type" : "int64_t",
        "cpp_include_file" : "stdint.h",
        "default_example" : 10000
      },
      {
        "type_name" : "real_amount",
        "cpp_parameter_type" : "double",
        "cpp_return_type" : "double",
        "cpp_include_file" : "stdint.h",
        "default_example" : 10000
      },
      {
        "type_name" : "receive_account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "Bob"
      },
      {
        "type_name" : "sending_account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "alice"
      },
      {
        "type_name" : "asset_symbol",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "XTS"
      },
      {
        "type_name" : "invoice_summary",
        "cpp_return_type" : "bts::wallet::invoice_summary",
        "cpp_include_file" : "bts/wallet/wallet.hpp",
        "default_example" : "TODO"
      },
      {
        "type_name" : "filename",
        "cpp_return_type" : "fc::path",
        "cpp_include_file" : "fc/filesystem.hpp",
        "default_example" : "some_filename.txt"
      },
      {
        "type_name" : "address",
        "cpp_return_type" : "bts::blockchain::address",
        "cpp_include_file" : "bts/blockchain/address.hpp"
      },
      {
        "type_name" : "full_block",
        "cpp_return_type" : "bts::blockchain::full_block",
        "cpp_include_file" : "bts/blockchain/block.hpp"
      },
      {
        "type_name" : "digest_block",
        "cpp_return_type" : "bts::blockchain::digest_block",
        "cpp_include_file" : "bts/blockchain/block.hpp"
      },
      {
        "type_name" : "account_id_type",
        "cpp_return_type" : "bts::blockchain::account_id_type",
        "cpp_include_file" : "bts/blockchain/types.hpp"
      },
      {
         "type_name" : "account_id_array",
         "container_type" : "array",
         "contained_type" : "account_id_type"
      },
      {
        "type_name" : "asset_record",
        "cpp_return_type" : "bts::blockchain::asset_record",
        "cpp_include_file" : "bts/blockchain/asset_record.hpp"
      },
      {
        "type_name" : "asset_record_array",
        "container_type" : "array",
        "contained_type" : "asset_record",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "optional_asset_record",
        "cpp_return_type" : "fc::optional<bts::blockchain::asset_record>",
        "cpp_include_file" : "bts/blockchain/asset_record.hpp"
      },
      {
        "type_name" : "asset_id_type",
        "cpp_return_type" : "bts::blockchain::asset_id_type",
        "cpp_include_file" : "bts/blockchain/types.hpp"
      },
      {
        "type_name" : "wallet_account_record",
        "cpp_return_type" : "bts::wallet::wallet_account_record",
        "cpp_include_file" : "bts/wallet/wallet_records.hpp"
      },
      {
        "type_name" : "wallet_account_record_array",
        "container_type" : "array",
        "contained_type" : "wallet_account_record",
        "default_example" : "TODO"      
      },
      {
        "type_name" : "proposal_id",
        "cpp_return_type" : "bts::blockchain::proposal_id_type",
        "cpp_include_file" : "bts/blockchain/types.hpp"
      },
      {
        "type_name" : "address_list",
        "container_type" : "array",
        "contained_type" : "address",
        "default_example" : "TODO"
      },
      {
          "type_name" : "size",
          "cpp_parameter_type" : "uint64_t",
          "cpp_return_type" : "uint64_t",
          "cpp_include_file" : "stdint.h",
          "default_example" : 10
      },
      {
          "type_name" : "map< address, amount >",
          "cpp_return_type" : "std::unordered_map< bts::blockchain::address, int64_t >",
          "cpp_include_file" : "bts/blockchain/address.hpp"
      },
      {
          "type_name" : "name",
          "cpp_return_type" : "std::string",
          "cpp_include_file" : "string",
          "default_example" : "George"
      },
      {
          "type_name" : "brainkey",
          "cpp_return_type" : "std::string",
          "cpp_include_file" : "string",
          "default_example" : "*1+1!=2"
      },
      {
          "type_name" : "keyhoteeid",
          "cpp_return_type" : "std::string",
          "cpp_include_file" : "string",
          "default_example" : "Alice"
      },
      {
         "type_name" : "market_order_status",
         "cpp_return_type" : "bts::wallet::market_order_status"
      },
      {
         "type_name" : "market_order_status_array",
         "container_type" : "array",
         "contained_type" : "market_order_status"
      },
      {
         "type_name" : "map< account_name, share_type >",
         "cpp_return_type" : "std::unordered_map< std::string, bts::blockchain::share_type >"
      },
      {
         "type_name" : "block_record",
         "cpp_return_type" : "bts::blockchain::block_record"
      },
      {
         "type_name" : "block_record_array",
         "container_type" : "array",
         "contained_type" : "block_record"
      },
      {
         "type_name" : "account_vote_summary",
         "cpp_return_type" : "bts::wallet::wallet::account_vote_summary_type"
      },
      {
         "type_name" : "method_map_type",
         "cpp_return_type" : "std::map<std::string, bts::api::method_data>",
            "cpp_include_file" : "bts/api/api_metadata.hpp"
      },
      {
         "type_name" : "error_map",
         "cpp_return_type" : "std::map<fc::time_point, fc::exception>"
      },
      {
         "type_name" : "timestamp",
         "cpp_return_type" : "fc::time_point"
      },
      {
         "type_name" : "potential_peer_record",
         "cpp_return_type" : "bts::net::potential_peer_record",
         "cpp_return_type" : "bts/net/peer_database.hpp"
      },
      {
         "type_name" : "potential_peer_record_array",
         "container_type" : "array",
         "contained_type" : "potential_peer_record"
      }
    ]
}
